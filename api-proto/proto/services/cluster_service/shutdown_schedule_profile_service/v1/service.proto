syntax = "proto3";

package proto.services.shutdown_schedule_profile_service.v1;

import "proto/common/shutdown_schedule_profile/v1/shutdown_schedule_profile.proto";

message GetShutdownScheduleProfileRequest {
    string shutdown_schedule_profile_id = 1;
}

message GetShutdownScheduleProfileResponse {
    proto.common.shutdown_schedule_profile.v1.ShutdownScheduleProfile shutdown_schedule_profile = 1;
}

message ListShutdownScheduleProfilesRequest {
    int64 page_number = 1;
    int64 page_size = 2;
}

message ListShutdownScheduleProfilesResponse {
    repeated proto.common.shutdown_schedule_profile.v1.ShutdownScheduleProfile shutdown_schedule_profiles = 1;
}

service ShutdownScheduleProfileService {

    // Retrieves a shutdown schedule profile
    //    Request Metadata:
    //        - authorization: Bearer token for authentication
    //        - x-fingerprint: The fingerprint of the user
    //        - x-organization-id: The organization id
    //    Response Metadata:
    //        - x-http-code: The HTTP status code that is equivalent to the gRPC status code
    //    Possible gRPC errors:
    //        - FAILED_PRECONDITION -> 9: The x-fingerprint or x-organization-id is missing
    //        - INTERNAL -> 13: The something went wrong in the server side
    //        - NOT_FOUND -> 5: The shutdown schedule profile does not exist
    rpc GetShutdownScheduleProfile(GetShutdownScheduleProfileRequest) returns (GetShutdownScheduleProfileResponse);
    
    // Lists shutdown schedule profiles
    //    Request Metadata:
    //        - authorization: Bearer token for authentication
    //        - x-fingerprint: The fingerprint of the user
    //        - x-organization-id: The organization id
    //    Response Metadata:
    //        - x-http-code: The HTTP status code that is equivalent to the gRPC status code
    //    Possible gRPC errors:
    //        - FAILED_PRECONDITION -> 9: The x-fingerprint or x-organization-id is missing
    //        - INTERNAL -> 13: The something went wrong in the server side
    rpc ListShutdownScheduleProfiles(ListShutdownScheduleProfilesRequest) returns (ListShutdownScheduleProfilesResponse);
}