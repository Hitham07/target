syntax = "proto3";

package proto.services.firewall_service.v1;

import "proto/common/firewall/v1/firewall.proto";

message GetFirewallRequest {
    string firewall_id = 1;
}

message GetFirewallResponse {
    proto.common.firewall.v1.Firewall firewall = 1;
}

message ListFirewallsRequest {
    int64 page_number = 1;
    int64 page_size = 2;
}

message ListFirewallsResponse {
    repeated proto.common.firewall.v1.Firewall firewalls = 1;
}

service FirewallService {

    // Retrieves a firewall
    //    Request Metadata:
    //        - authorization: Bearer token for authentication
    //        - x-fingerprint: The fingerprint of the user
    //        - x-organization-id: The organization id
    //    Response Metadata:
    //        - x-http-code: The HTTP status code that is equivalent to the gRPC status code
    //    Possible gRPC errors:
    //        - FAILED_PRECONDITION -> 9: The x-fingerprint or x-organization-id is missing
    //        - INTERNAL -> 13: The something went wrong in the server side
    //        - NOT_FOUND -> 5: The firewall does not exist
    rpc GetFirewall(GetFirewallRequest) returns (GetFirewallResponse);
    
    // Lists firewalls
    //    Request Metadata:
    //        - authorization: Bearer token for authentication
    //        - x-fingerprint: The fingerprint of the user
    //        - x-organization-id: The organization id
    //    Response Metadata:
    //        - x-http-code: The HTTP status code that is equivalent to the gRPC status code
    //    Possible gRPC errors:
    //        - FAILED_PRECONDITION -> 9: The x-fingerprint or x-organization-id is missing
    //        - INTERNAL -> 13: The something went wrong in the server side
    rpc ListFirewalls(ListFirewallsRequest) returns (ListFirewallsResponse);
}