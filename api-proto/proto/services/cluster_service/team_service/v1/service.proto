syntax = "proto3";

package proto.services.team_service.v1;

import "proto/common/team/v1/team.proto";

message GetTeamRequest {
    string team_id = 1;
}

message GetTeamResponse {
    proto.common.team.v1.Team team = 1;
}

message ListTeamsRequest {
    int64 page_number = 1;
    int64 page_size = 2;
}

message ListTeamsResponse {
    repeated proto.common.team.v1.Team teams = 1;
}

service TeamService {

    // Retrieves a team
    //    Request Metadata:
    //        - authorization: Bearer token for authentication
    //        - x-fingerprint: The fingerprint of the user
    //        - x-organization-id: The organization id
    //    Response Metadata:
    //        - x-http-code: The HTTP status code that is equivalent to the gRPC status code
    //    Possible gRPC errors:
    //        - FAILED_PRECONDITION -> 9: The x-fingerprint or x-organization-id is missing
    //        - INTERNAL -> 13: The something went wrong in the server side
    //        - NOT_FOUND -> 5: The team does not exist
    rpc GetTeam(GetTeamRequest) returns (GetTeamResponse);
    
    // Lists teams
    //    Request Metadata:
    //        - authorization: Bearer token for authentication
    //        - x-fingerprint: The fingerprint of the user
    //        - x-organization-id: The organization id
    //    Response Metadata:
    //        - x-http-code: The HTTP status code that is equivalent to the gRPC status code
    //    Possible gRPC errors:
    //        - FAILED_PRECONDITION -> 9: The x-fingerprint or x-organization-id is missing
    //        - INTERNAL -> 13: The something went wrong in the server side
    rpc ListTeams(ListTeamsRequest) returns (ListTeamsResponse);
}